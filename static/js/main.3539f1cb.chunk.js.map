{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","FindMovie","addMovies","useState","selectedMovie","setSelectedMovie","query","setQuery","isMovieFound","setIsMovieFound","loadMovie","a","title","fetch","then","response","json","loadedMovie","htmlFor","type","id","placeholder","cn","value","onChange","event","target","onClick","every","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC3BKC,EAA8B,SAACC,GAC1C,IAAQC,EAAWD,EAAXC,OAER,OACE,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMW,c,+CCJd,IAAMC,EAA6B,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQI,EAAgB,EAAhBA,UACnD,EAA0CC,mBAAuB,MAAjE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sECbMC,EDccN,ECb/BO,MAAM,GAAD,OAHE,8CAGF,OAAcD,IACvBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDWX,OACVC,EADU,OAGhBZ,EAAiBY,GAHD,iCCbb,IAAmBL,IDaN,OAAH,qDAMf,OACE,qCACE,uBAAMtB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ4B,QAAQ,cAAjC,yBAIA,qBAAK5B,UAAU,UAAf,SACE,uBACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ/B,UAAWgC,IACT,QACA,CAAE,aAAcd,IAElBe,MAAOjB,EACPkB,SAAU,SAACC,GACTlB,EAASkB,EAAMC,OAAOH,aAK1Bf,GACA,mBAAGlB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,kBACV,UAAQ,OACRqC,QAAS,WACHrB,GACFI,IACAH,EAAS,IACTE,GAAgB,IAEhBA,GAAgB,IAVtB,4BAiBF,qBAAKnB,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,oBACV,UAAQ,MACRqC,QAAS,WACH7B,EAAO8B,OACT,SAAAvC,GAAK,OAAIA,EAAMW,UAAN,OAAiBI,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAeJ,aAErCI,GAAiBI,GACnBN,EAAUE,GAGZG,EAAS,MAZf,qCAsBN,sBAAKjB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACEc,GAAiBI,GACjB,cAAC,EAAD,CAAWnB,MAAOe,WE5FfyB,EAAgB,WAC3B,MAA4B1B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAegC,EAAf,KAMA,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYQ,OAAQA,MAEtB,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CACEQ,OAAQA,EACRI,UAZgB,SAACb,GACvByC,EAAU,GAAD,mBAAKhC,GAAL,CAAaT,cCP1B0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3539f1cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../react-app-env';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\" data-cy=\"card-image\">\n\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"content\">\n        {movie.Plot}\n        <br />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovies } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ntype Props = {\n  movies: Movie[];\n  addMovies: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, addMovies }) => {\n  const [selectedMovie, setSelectedMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isMovieFound, setIsMovieFound] = useState(true);\n\n  const loadMovie = async () => {\n    const loadedMovie = await getMovies(query);\n\n    setSelectedMovie(loadedMovie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': !isMovieFound },\n              )}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n\n          {!isMovieFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              onClick={() => {\n                if (query) {\n                  loadMovie();\n                  setQuery('');\n                  setIsMovieFound(true);\n                } else {\n                  setIsMovieFound(false);\n                }\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              onClick={() => {\n                if (movies.every(\n                  movie => movie.imdbID !== selectedMovie?.imdbID,\n                )) {\n                  if (selectedMovie && isMovieFound) {\n                    addMovies(selectedMovie);\n                  }\n\n                  setQuery('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {(selectedMovie && isMovieFound) && (\n          <MovieCard movie={selectedMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { Movie } from './react-app-env';\n\nconst API_URL = 'http://www.omdbapi.com/?apikey=f47357f5&t=';\n\nexport function getMovies(title: string): Promise<Movie> {\n  return fetch(`${API_URL}${title}`)\n    .then(response => response.json());\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './react-app-env';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const setMovieHandler = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovies={setMovieHandler}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}